Note : Uniquement viable pour jdk 18 ou ulterieur

switch (carteString[i][j]) {
					case "Plaine":
					break;
					case "Foret":
					break;
					case "Montagne":
					break;
					case "Eau":
					break;
					default:
					break;
				}

				switch (s[0]) {
						case "Plaine":
							mapTerrains[i][j]=  new Plaine();
						break;
						case "Foret":
							mapTerrains[i][j]=  new Foret();
						break;
						case "Montagne":
							mapTerrains[i][j]=  new Montagne();
						break;
						case "Eau":
							mapTerrains[i][j]=  new Eau();
						break;
						default:
							String[] temp = s[0].split(":");
							switch (temp[0]) {
								case "Ville":
									mapTerrains[i][j]=  new Ville(Integer.valueOf(temp[1]));
									break;
								case "QG":
									mapTerrains[i][j]=  new QG(Integer.valueOf(temp[1]));
								case "Usine":
									mapTerrains[i][j]=  new Usine(Integer.valueOf(temp[1]));
								default:

									break;
							}
						break;
				}
				if(s.length>1){
					String[] temp = s[0].split(":");
				}

				Affichage.dessineImageDansCase(1, 1, Chemins.getCheminFleche(Chemins.DIRECTION_DEBUT,Chemins.DIRECTION_DROITE));
		Affichage.dessineImageDansCase(2, 1, Chemins.getCheminFleche(Chemins.DIRECTION_HAUT,Chemins.DIRECTION_GAUCHE));
		Affichage.dessineImageDansCase(2, 2, Chemins.getCheminFleche(Chemins.DIRECTION_BAS,Chemins.DIRECTION_HAUT));
		Affichage.dessineImageDansCase(2, 3, Chemins.getCheminFleche(Chemins.DIRECTION_BAS,Chemins.DIRECTION_FIN));
		
		Affichage.dessineImageDansCase(4, 4, Chemins.getCheminFleche(Chemins.DIRECTION_DEBUT,Chemins.DIRECTION_FIN));

		if(cheminUnit.size()==1){
			Affichage.dessineImageDansCase(cheminUnit.get(0)[0], cheminUnit.get(0)[1], Chemins.getCheminFleche(Chemins.DIRECTION_DEBUT,Chemins.DIRECTION_FIN));
		}
		if(cheminUnit.size()==2){
			int x1 = cheminUnit.get(0)[0];
			int y1 = cheminUnit.get(0)[1];
			int x2 = cheminUnit.get(1)[0];
			int y2 = cheminUnit.get(1)[1];
			String direction="";
			if (x1 < x2) {
				direction = Chemins.DIRECTION_DROITE;
			} else if (x1 > x2) {
				direction = Chemins.DIRECTION_GAUCHE;
			} else if (y1 < y2) {
				direction = Chemins.DIRECTION_HAUT;
			} else if (y1 > y2) {
				direction = Chemins.DIRECTION_BAS;
			}
			Affichage.dessineImageDansCase(cheminUnit.get(0)[0], cheminUnit.get(0)[1], Chemins.getCheminFleche(Chemins.DIRECTION_DEBUT,direction));
			if (x1 < x2) {
				direction = Chemins.DIRECTION_GAUCHE;
			} else if (x1 > x2) {
				direction = Chemins.DIRECTION_DROITE;
			} else if (y1 < y2) {
				direction = Chemins.DIRECTION_BAS;
			} else if (y1 > y2) {
				direction = Chemins.DIRECTION_HAUT;
			}
			Affichage.dessineImageDansCase(cheminUnit.get(1)[0], cheminUnit.get(1)[1], Chemins.getCheminFleche(direction,Chemins.DIRECTION_FIN));

		}
		for (int i = 1; i < cheminUnit.size() - 1; i++) {
			int x1 = cheminUnit.get(i-1)[0];
			int y1 = cheminUnit.get(i-1)[1];
			int x2 = cheminUnit.get(i)[0];
			int y2 = cheminUnit.get(i)[1];
			int x3 = cheminUnit.get(i + 1)[0];
			int y3 = cheminUnit.get(i + 1)[1];
			String direction = "";
			String direction2= "";
			if (i == 1) {
				if (x1 < x2) {
					direction = Chemins.DIRECTION_DROITE;
				} else if (x1 > x2) {
					direction = Chemins.DIRECTION_GAUCHE;
				} else if (y1 < y2) {
					direction = Chemins.DIRECTION_HAUT;
				} else if (y1 > y2) {
					direction = Chemins.DIRECTION_BAS;
				}
				Affichage.dessineImageDansCase(x1, y1, Chemins.getCheminFleche(Chemins.DIRECTION_DEBUT, direction));
			}
			
			if (x2 < x3) {
				direction = Chemins.DIRECTION_DROITE;
			} else if (x2 > x3) {
				direction = Chemins.DIRECTION_GAUCHE;
			} else if (y2 < y3) {
				direction = Chemins.DIRECTION_HAUT;
			} else if (y2 > y3) {
				direction = Chemins.DIRECTION_BAS;
			}
			if (x1 < x2) {
				direction2 = Chemins.DIRECTION_GAUCHE;
			} else if (x1 > x2) {
				direction2 = Chemins.DIRECTION_DROITE;
			} else if (y1 < y2) {
				direction2 = Chemins.DIRECTION_BAS;
			} else if (y1 > y2) {
				direction2 = Chemins.DIRECTION_HAUT;
			}
			Affichage.dessineImageDansCase(x2, y2, Chemins.getCheminFleche(direction,direction2));
			
			if (i == cheminUnit.size() - 2) {
				if (x2 < x3) {
					direction = Chemins.DIRECTION_GAUCHE;
				} else if (x2 > x3) {
					direction = Chemins.DIRECTION_DROITE;
				} else if (y2 < y3) {
					direction = Chemins.DIRECTION_BAS;
				} else if (y2 > y3) {
					direction = Chemins.DIRECTION_GAUCHE;
				}
				Affichage.dessineImageDansCase(x3, y3, Chemins.getCheminFleche(direction, Chemins.DIRECTION_FIN));
			} 
		}
		